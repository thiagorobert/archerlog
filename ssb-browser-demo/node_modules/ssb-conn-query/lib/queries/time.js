"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.passesGroupDebounce = exports.passesExpBackoff = void 0;
function passesExpBackoff(step, max = Infinity, timestamp = Date.now()) {
    return ([_addr, data]) => {
        const prevAttempt = data.stateChange || 0;
        const numFailures = data.failure || 0;
        const expBackoff = Math.min(Math.pow(2, numFailures) * step, max);
        const nextAttempt = prevAttempt + expBackoff;
        return nextAttempt < timestamp;
    };
}
exports.passesExpBackoff = passesExpBackoff;
function passesGroupDebounce(groupMin, timestamp = Date.now()) {
    return (group) => {
        const newestStateChange = group.reduce((max, [_addr, p]) => Math.max(max, p.stateChange || 0), 0);
        const minTimeThreshold = newestStateChange + groupMin;
        if (timestamp < minTimeThreshold)
            return [];
        else
            return group;
    };
}
exports.passesGroupDebounce = passesGroupDebounce;
