import { FeedId } from 'ssb-typescript';
import { RPC } from './types';
export default class RoomObserver {
    readonly rpc: RPC;
    readonly handler: (stream: any, id: FeedId) => void;
    private readonly ssb;
    private readonly roomKey;
    private readonly address;
    private readonly roomMetadata;
    private attendants;
    private attendantsDrain?;
    private endpointsDrain?;
    constructor(ssb: RoomObserver['ssb'], serverKey: RoomObserver['roomKey'], address: RoomObserver['address'], rpc: RoomObserver['rpc'], roomMetadata: RoomObserver['roomMetadata'], onConnect: (stream: any) => void);
    private startAttendants;
    private startEndpoints;
    private attendantsUpdated;
    private attendantsEnded;
    private stageNewAttendant;
    private handleStreamError;
    private endpointsUpdated;
    private endpointsEnded;
    private isAlreadyConnected;
    private getAddress;
    cancel(): void;
    close(): void;
}
