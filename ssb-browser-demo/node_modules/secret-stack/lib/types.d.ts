/// <reference types="node" />
export declare type ScopeStr = 'device' | 'local' | 'private' | 'public';
export declare type Incoming = {
    scope: ScopeStr | Array<ScopeStr>;
    transform: 'shs' | 'noauth';
    port?: number;
    host?: string;
};
export declare type Outgoing = {
    scope?: undefined;
    transform: 'shs' | 'noauth';
    port?: undefined;
    host?: undefined;
};
export declare type Transport = {
    name: string;
    create: (opts: Incoming | Outgoing) => any;
};
export declare type Transform = {
    name: string;
    create: () => unknown;
};
export declare type Config = {
    caps?: {
        shs?: Buffer | string;
    };
    appKey?: Buffer | string;
    keys?: {
        public?: string;
        private?: string;
        id?: string;
    };
    seed?: unknown;
    connections?: {
        incoming?: {
            [name: string]: Array<Incoming>;
        };
        outgoing?: {
            [name: string]: Array<Outgoing>;
        };
    };
    timeout?: number;
    timers?: {
        handshake?: number;
        inactivity?: number;
    };
    host?: string;
    port?: number;
};
