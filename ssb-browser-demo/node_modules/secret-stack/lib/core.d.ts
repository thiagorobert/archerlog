import { Config, Transport, Transform } from './types';
declare const _default: {
    manifest: {
        auth: string;
        address: string;
        manifest: string;
        multiserver: {
            parse: string;
            address: string;
        };
    };
    permissions: {
        anonymous: {
            allow: string[];
        };
    };
    init(api: any, opts: Config, permissions: any, manifest: any): {
        config: Config;
        auth(_pub: unknown, cb: Function): void;
        address(scope?: "device" | "local" | "private" | "public" | undefined): any;
        getAddress(scope?: "device" | "local" | "private" | "public" | undefined): any;
        manifest(): any;
        getManifest(): any;
        connect(address: unknown, cb: Function): void;
        multiserver: {
            transport(transport: Transport): {
                transport(transport: Transport): any;
                transform(transform: Transform): any;
                parse(str: string): any;
                address(scope?: "device" | "local" | "private" | "public" | undefined): any;
            };
            transform(transform: Transform): {
                transport(transport: Transport): any;
                transform(transform: Transform): any;
                parse(str: string): any;
                address(scope?: "device" | "local" | "private" | "public" | undefined): any;
            };
            parse(str: string): any;
            address(scope?: "device" | "local" | "private" | "public" | undefined): any;
        };
        close(err: unknown, cb: Function): void;
    };
};
export = _default;
